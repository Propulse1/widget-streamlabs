export default async function handler(req, res) {
  try {
    const { teamId, seasonId, leagueId } = req.query;
    if (!teamId) {
      return res.status(400).json({ message: 'Paramètre teamId requis' });
    }

    // ---- Construction des filtres Sportmonks
    // state_id:5 = match terminé
    const filters = [`teams:${teamId}`, 'state_id:5'];
    if (seasonId) filters.push(`season_id:${seasonId}`);
    if (leagueId)  filters.push(`league_id:${leagueId}`);

    const params = new URLSearchParams({
      include: 'participants;scores;events;periods;league;round;venue',
      filters: filters.join(';'),
      per_page: '1',          // ne garder que le plus récent
      sort: '-starting_at',   // le plus récent d'abord
      api_token: process.env.SPORTMONKS_TOKEN,
    });

    const url = `https://soccer.sportmonks.com/api/v3/football/fixtures?${params.toString()}`;
    const r = await fetch(url);
    const data = await r.json();

    // Selon Sportmonks v3, la liste est dans data.data (sinon data)
    const list = Array.isArray(data?.data) ? data.data : (Array.isArray(data) ? data : []);
    if (list.length > 0) {
      return res.status(200).json({ fixture: list[0] });
    }

    return res.status(404).json({
      message: 'Aucun match terminé trouvé pour cette équipe',
      teamId,
      seasonId: seasonId || null,
      leagueId: leagueId || null,
    });
  } catch (e) {
    return res.status(500).json({ message: 'Erreur serveur', error: String(e) });
  }
}
